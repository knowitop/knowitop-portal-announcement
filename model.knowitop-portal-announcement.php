						<?php
//
// File generated by ... on the 2017-08-23T13:39:09+0000
// Please do not edit manually
//

/**
 * Classes and menus for knowitop-portal-announcement (version 2.0.0)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */



class Announcement extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel,searchable,structure',
			'key_type' => 'autoincrement',
			'name_attcode' => 'title',
			'state_attcode' => '',
			'reconc_keys' => array('title'),
			'db_table' => 'announcement',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("org_name", array("allowed_values"=>null, "extkey_attcode"=>'org_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("title", array("allowed_values"=>null, "sql"=>'title', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("description", array("allowed_values"=>null, "sql"=>'description', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("start_date", array("allowed_values"=>null, "sql"=>'start_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>true)));
		MetaModel::Init_AddAttribute(new AttributeDateTime("end_date", array("allowed_values"=>null, "sql"=>'end_date', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("active,inactive"), "display_style"=>'radio_vertical', "sql"=>'status', "default_value"=>'active', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("message_type", array("allowed_values"=>new ValueSetEnum("message_info,message_ok,message_warning,message_error"), "display_style"=>'radio_vertical', "sql"=>'message_type', "default_value"=>'message_info', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSetIndirect("customers_list", array("linked_class"=>'lnkAnnouncementToCustomer', "ext_key_to_me"=>'announcement_id', "ext_key_to_remote"=>'customer_org_id', "allowed_values"=>null, "count_min"=>0, "count_max"=>0, "duplicates"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'org_id',
  1 => 'status',
  2 => 'title',
  3 => 'description',
  4 => 'start_date',
  5 => 'customers_list',
  6 => 'end_date',
  7 => 'message_type',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'org_id',
  1 => 'status',
  2 => 'title',
  3 => 'start_date',
  4 => 'end_date',
  5 => 'message_type',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'org_id',
  1 => 'title',
  2 => 'start_date',
  3 => 'end_date',
  4 => 'message_type',
  5 => 'status',
));

	}


}


class lnkAnnouncementToCustomer extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array
		(
			'category' => 'bizmodel',
			'key_type' => 'autoincrement',
			'is_link' => true,
			'name_attcode' => array('announcement_id', 'customer_org_id'),
			'state_attcode' => '',
			'reconc_keys' => array('announcement_id', 'customer_org_id'),
			'db_table' => 'lnkannouncementtocustomer',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
		);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeExternalKey("announcement_id", array("targetclass"=>'Announcement', "allowed_values"=>null, "sql"=>'announcement_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("announcement_name", array("allowed_values"=>null, "extkey_attcode"=>'announcement_id', "target_attcode"=>'title', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("customer_org_id", array("targetclass"=>'Organization', "allowed_values"=>null, "sql"=>'customer_org_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalField("customer_org_name", array("allowed_values"=>null, "extkey_attcode"=>'customer_org_id', "target_attcode"=>'name', "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  0 => 'announcement_id',
  1 => 'customer_org_id',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'announcement_id',
  1 => 'customer_org_id',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'announcement_id',
  1 => 'customer_org_id',
));

	}


}
//
// Menus
//
class MenuCreation_knowitop_portal_announcement extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
		$__comp_menus__['RequestManagement'] = new MenuGroup('RequestManagement', 30);
		$__comp_menus__['NewAnnouncement'] = new NewObjectMenuNode('NewAnnouncement', 'Announcement', $__comp_menus__['RequestManagement']->GetIndex(), 97);
		$__comp_menus__['ActiveAnnouncements'] = new OQLMenuNode('ActiveAnnouncements', "SELECT Announcement AS a JOIN lnkAnnouncementToCustomer AS lnk ON lnk.announcement_id = a.id WHERE (a.start_date <= NOW() OR ISNULL(a.start_date)) AND (a.end_date >= NOW() OR ISNULL(a.end_date)) AND a.status = 'active'", $__comp_menus__['RequestManagement']->GetIndex(), 98, true, null);
		$__comp_menus__['ActiveAnnouncements']->SetParameters(array('auto_reload' => "standard"));
		$__comp_menus__['AllAnnouncements'] = new OQLMenuNode('AllAnnouncements', "SELECT Announcement", $__comp_menus__['RequestManagement']->GetIndex(), 99, true, null);
	}
} // class MenuCreation_knowitop_portal_announcement
